// Generated by CoffeeScript 1.4.0
(function() {
  var Contacts, ContactsShow, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Contacts = (function(_super) {

    __extends(Contacts, _super);

    function Contacts() {
      return Contacts.__super__.constructor.apply(this, arguments);
    }

    Contacts.prototype.el = '#contacts-list';

    Contacts.prototype.initialize = function(options) {
      return this.collection.on('reset', this.render, this);
    };

    Contacts.prototype.template = _.template($('#contact-list-item').html());

    Contacts.prototype.render = function() {
      var model, _i, _len, _ref;
      this.$el.html('');
      _ref = this.collection.models;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        model = _ref[_i];
        if (!(model.attributes.image != null)) {
          model.attributes.image = 'tyrion.jpg';
        }
        this.$el.append(this.template(model.toJSON()));
      }
      return this;
    };

    return Contacts;

  })(Backbone.View);

  this.app = (_ref = window.app) != null ? _ref : {};

  this.app.Views.Contacts = Contacts;

  ContactsShow = (function(_super) {

    __extends(ContactsShow, _super);

    function ContactsShow() {
      return ContactsShow.__super__.constructor.apply(this, arguments);
    }

    ContactsShow.prototype.el = '#contact-page';

    ContactsShow.prototype.template = _.template($('#contact-item').html());

    ContactsShow.prototype.events = {
      'click .back': 'goBack',
      'click .do-something': 'doSomething'
    };

    ContactsShow.prototype.render = function() {
      this.$el.html('');
      this.$el.append(this.template(this.model.toJSON()));
      return this;
    };

    ContactsShow.prototype.doSomething = function(e) {
      return e.preventDefault();
    };

    ContactsShow.prototype.goBack = function() {
      return app.goBack();
    };

    return ContactsShow;

  })(Backbone.View);

  this.app = (_ref1 = window.app) != null ? _ref1 : {};

  this.app.Views.ContactsShow = ContactsShow;

}).call(this);
